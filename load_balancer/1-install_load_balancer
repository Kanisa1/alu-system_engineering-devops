#!/usr/bin/env bash
<<<<<<< HEAD
#Install and configure HAproxy

apt-get update
apt-get install -y haproxy

sudo mv /etc/haproxy/haproxy.cfg /etc/haproxy/haproxy.cfg.bak
sudo tee /etc/haproxy/haproxy.cfg > /dev/null <<EOT
global
    daemon
    maxconn 256

defaults
    mode http
    timeout connect 5000ms
    timeout client 50000ms
    timeout server 50000ms

frontend http-in
    bind *:80
    default_backend webservers

backend webservers
    balance roundrobin
        server 6039-web-01 54.173.16.85
        server 6039-web-02 18.205.239.18
EOT

# Update the hostname
sudo hostnamectl set-hostname 53580825-haproxy

# Enable HAProxy as a service managed by the init script
sudo service haproxy enable 

# Restart HAProxy service
=======
# Create a script to install and configure HAProxy on lb-01 server
# Configure HAProxy to send traffic to web-01 and web-02 servers
# Distribute requests using a roundrobin algorithm
# Make sure that HAProxy can be managed via an init script

# Install and configure HAproxy on my lb-01 server.
sudo apt-get -y update
apt-get -y install haproxy

# edit config file
server_config=\
"
frontend  Kanisa1_frontend
        bind *:80
        mode http
        default_backend besthor_backend
backend Kanisa1_backend
        balance roundrobin
        server 6039-web-01 54.173.16.85
        server 6039-web-02 18.205.239.18
"
echo "$server_config" | sudo tee -a /etc/haproxy/haproxy.cfg

# enable haproxy to be started by init script
echo "ENABLED=1" | sudo tee -a /etc/default/haproxy

# Testing the HAproxy configuration file
sudo haproxy -c -f /etc/haproxy/haproxy.cfg

# Restart the Nginx service
>>>>>>> 5365d759325681703cda2cd1d3703f046df30df7
sudo service haproxy restart

